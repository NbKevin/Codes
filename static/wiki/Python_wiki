13
Python is a widely used high-level, general-purpose,
interpreted, dynamic programming language.[24][25]
Its design philosophy emphasizes code readability, and
its syntax allows programmers to express concepts
in fewer lines of code than possible in languages
such as C++ or Java.[26][27] The language provides
constructs intended to enable writing clear programs
on both a small and large scale.[28]

Python supports multiple programming paradigms,
including object-oriented, imperative and functional
programming or procedural styles. It features a dynamic
type system and automatic memory management and has
a large and comprehensive standard library.[29]

Python interpreters are available for many operating
systems, allowing Python code to run on a wide variety
of systems. CPython, the reference implementation of
Python, is open source software[30] and has a
community-based development model, as do nearly all
of its variant implementations. CPython is managed
by the non-profit Python Software Foundation.

Python was conceived in the late 1980s,[31] and its
implementation began in December 1989[32] by
Guido van Rossum at Centrum Wiskunde & Informatica
(CWI) in the Netherlands as a successor to the ABC
language (itself inspired by SETL)[33] capable of
exception handling and interfacing with the operating
system Amoeba.[8] Van Rossum is Python's principal
author, and his continuing central role in deciding
the direction of Python is reflected in the title
given to him by the Python community, benevolent
dictator for life (BDFL).

About the origin of Python, Van Rossum wrote in 1996

Over six years ago, in December 1989, I was looking
for a "hobby" programming project that would keep me
occupied during the week around Christmas. My office
... would be closed, but I had a home computer, and
not much else on my hands. I decided to write an
interpreter for the new scripting language I had been
thinking about lately: a descendant of ABC that would
appeal to Unix/C hackers. I chose Python as a working
title for the project, being in a slightly irreverent
mood (and a big fan of Monty Python's Flying Circus).

Python 2.0 was released on 16 October 2000 and had
many major new features, including a cycle-detecting
garbage collector and support for Unicode. With this
release the development process was changed and became
more transparent and community-backed.[35]

Python 3.0 (which early in its development was commonly
referred to as Python 3000 or py3k), a major,
backwards-incompatible release, was released on 3 December
2008 after a long period of testing. Many of its major
features have been backported to the backwards-compatible
Python 2.6.x and 2.7.x version series.

The core philosophy of the language is summarized by the
document The Zen of Python (PEP 20), which includes
aphorisms such as:[45]

Beautiful is better than ugly
Explicit is better than implicit
Simple is better than complex
Complex is better than complicated
Readability counts

Rather than requiring all desired functionality to be
built into the language's core, Python was designed to
be highly extensible. Python can also be embedded in
existing applications that need a programmable interface.
This design of a small core language with a large standard
library and an easily extensible interpreter was intended
by Van Rossum from the start because of his frustrations
with ABC, which espoused the opposite mindset.

==

Python is a widely used high-level, general-purpose,
interpreted, dynamic programming language.[24][25]
Its design philosophy emphasizes code readability, and
its syntax allows programmers to express concepts
in fewer lines of code than possible in languages
such as C++ or Java.[26][27] The language provides
constructs intended to enable writing clear programs
on both a small and large scale.[28]

Python supports multiple programming paradigms,
including object-oriented, imperative and functional
programming or procedural styles. It features a dynamic
type system and automatic memory management and has
a large and comprehensive standard library.[29]

Python interpreters are available for many operating
systems, allowing Python code to run on a wide variety
of systems. CPython, the reference implementation of
Python, is open source software[30] and has a
community-based development model, as do nearly all
of its variant implementations. CPython is managed
by the non-profit Python Software Foundation.

Python was conceived in the late 1980s,[31] and its
implementation began in December 1989[32] by
Guido van Rossum at Centrum Wiskunde & Informatica
(CWI) in the Netherlands as a successor to the ABC
language (itself inspired by SETL)[33] capable of
exception handling and interfacing with the operating
system Amoeba.[8] Van Rossum is Python's principal
author, and his continuing central role in deciding
the direction of Python is reflected in the title
given to him by the Python community, benevolent
dictator for life (BDFL).

About the origin of Python, Van Rossum wrote in 1996

Over six years ago, in December 1989, I was looking
for a "hobby" programming project that would keep me
occupied during the week around Christmas. My office
... would be closed, but I had a home computer, and
not much else on my hands. I decided to write an
interpreter for the new scripting language I had been
thinking about lately: a descendant of ABC that would
appeal to Unix/C hackers. I chose Python as a working
title for the project, being in a slightly irreverent
mood (and a big fan of Monty Python's Flying Circus).

Python 2.0 was released on 16 October 2000 and had
many major new features, including a cycle-detecting
garbage collector and support for Unicode. With this
release the development process was changed and became
more transparent and community-backed.[35]

Python 3.0 (which early in its development was commonly
referred to as Python 3000 or py3k), a major,
backwards-incompatible release, was released on 3 December
2008 after a long period of testing. Many of its major
features have been backported to the backwards-compatible
Python 2.6.x and 2.7.x version series.

The core philosophy of the language is summarized by the
document The Zen of Python (PEP 20), which includes
aphorisms such as:[45]

Beautiful is better than ugly
Explicit is better than implicit
Simple is better than complex
Complex is better than complicated
Readability counts

Rather than requiring all desired functionality to be
built into the language's core, Python was designed to
be highly extensible. Python can also be embedded in
existing applications that need a programmable interface.
This design of a small core language with a large standard
library and an easily extensible interpreter was intended
by Van Rossum from the start because of his frustrations
with ABC, which espoused the opposite mindset.