13
C#[note 2] (pronounced as see sharp) is a multi-
paradigm programming language encompassing strong
typing, imperative, declarative, functional, generic,
object-oriented (class-based), and component-oriented
programming disciplines. It was developed by Microsoft
within its .NET initiative and later approved as a
standard by Ecma (ECMA-334) and ISO (ISO/IEC 23270:2006).
C# is one of the programming languages designed for the
Common Language Infrastructure.

C# is a general-purpose, object-oriented programming
language.[12] Its development team is led by Anders
Hejlsberg. The most recent version is C# 6.0 which
was released in 2015.[13]

The ECMA standard lists these design goals for C#:

The C# language is intended to be a simple, modern,
general-purpose, object-oriented programming language.
The language, and implementations thereof, should
provide support for software engineering principles
such as strong type checking, array bounds checking,
detection of attempts to use uninitialized variables,
and automatic garbage collection. Software robustness,
durability, and programmer productivity are important.
The language is intended for use in developing software
components suitable for deployment in distributed
environments.

Portability is very important for source code and
programmers, especially those already familiar with
C and C++.

Support for internationalization is very important.

C# is intended to be suitable for writing applications
for both hosted and embedded systems, ranging from
the very large that use sophisticated operating systems,
down to the very small having dedicated functions.

Although C# applications are intended to be economical
with regard to memory and processing power requirements,
the language was not intended to compete directly on
performance and size with C or assembly language.

The reference C# compiler is Microsoft Visual C#,
which is open-source.[54]

Microsoft is leading the development of a new open-source
C# compiler and set of tools, previously codenamed "Roslyn".
The compiler, which is entirely written in managed code
(C#), has been opened up and functionality surfaced as APIs.
It is thus enabling developers to create refactoring and
diagnostics tools.

Other C# compilers exist, often including an implementation
of the Common Language Infrastructure and the .NET class
libraries up to .NET 2.0:

In August 2001, Microsoft Corporation, Hewlett-Packard
and Intel Corporation co-sponsored the submission of
specifications for C# as well as the Common Language
Infrastructure (CLI) to the standards organization Ecma
International. In December 2001, ECMA released ECMA-334
C# Language Specification. C# became an ISO standard in
2003 (ISO/IEC 23270:2003 - Information technology —
Programming languages — C#). ECMA had previously adopted
equivalent specifications as the 2nd edition of C#, in
December 2002.

In June 2005, ECMA approved edition 3 of the C# specification,
and updated ECMA-334. Additions included partial classes,
anonymous methods, nullable types, and generics (somewhat
similar to C++ templates).

In July 2005, ECMA submitted to ISO/IEC JTC 1, via the latter's
Fast-Track process, the standards and related TRs. This process
usually takes 6–9 months.

The C# language definition and the CLI are standardized under
ISO and Ecma standards that provide reasonable and
non-discriminatory licensing protection from patent claims.

Microsoft has agreed not to sue open source developers for
violating patents in non-profit projects for the part of the
framework that is covered by the OSP.[49] Microsoft has also
agreed not to enforce patents relating to Novell products
against Novell's paying customers[50] with the exception of a
list of products that do not explicitly mention C#, .NET or
Novell's implementation of .NET (The Mono Project).[51] However,
Novell maintains that Mono does not infringe any Microsoft
patents.[52] Microsoft has also made a specific agreement not
to enforce patent rights related to the Moonlight browser plugin,
which depends on Mono, provided it is obtained through Novell.

==

C#[note 2] (pronounced as see sharp) is a multi-
paradigm programming language encompassing strong
typing, imperative, declarative, functional, generic,
object-oriented (class-based), and component-oriented
programming disciplines. It was developed by Microsoft
within its .NET initiative and later approved as a
standard by Ecma (ECMA-334) and ISO (ISO/IEC 23270:2006).
C# is one of the programming languages designed for the
Common Language Infrastructure.

C# is a general-purpose, object-oriented programming
language.[12] Its development team is led by Anders
Hejlsberg. The most recent version is C# 6.0 which
was released in 2015.[13]

The ECMA standard lists these design goals for C#:

The C# language is intended to be a simple, modern,
general-purpose, object-oriented programming language.
The language, and implementations thereof, should
provide support for software engineering principles
such as strong type checking, array bounds checking,
detection of attempts to use uninitialized variables,
and automatic garbage collection. Software robustness,
durability, and programmer productivity are important.
The language is intended for use in developing software
components suitable for deployment in distributed
environments.

Portability is very important for source code and
programmers, especially those already familiar with
C and C++.

Support for internationalization is very important.

C# is intended to be suitable for writing applications
for both hosted and embedded systems, ranging from
the very large that use sophisticated operating systems,
down to the very small having dedicated functions.

Although C# applications are intended to be economical
with regard to memory and processing power requirements,
the language was not intended to compete directly on
performance and size with C or assembly language.

The reference C# compiler is Microsoft Visual C#,
which is open-source.[54]

Microsoft is leading the development of a new open-source
C# compiler and set of tools, previously codenamed "Roslyn".
The compiler, which is entirely written in managed code
(C#), has been opened up and functionality surfaced as APIs.
It is thus enabling developers to create refactoring and
diagnostics tools.

Other C# compilers exist, often including an implementation
of the Common Language Infrastructure and the .NET class
libraries up to .NET 2.0:

In August 2001, Microsoft Corporation, Hewlett-Packard
and Intel Corporation co-sponsored the submission of
specifications for C# as well as the Common Language
Infrastructure (CLI) to the standards organization Ecma
International. In December 2001, ECMA released ECMA-334
C# Language Specification. C# became an ISO standard in
2003 (ISO/IEC 23270:2003 - Information technology —
Programming languages — C#). ECMA had previously adopted
equivalent specifications as the 2nd edition of C#, in
December 2002.

In June 2005, ECMA approved edition 3 of the C# specification,
and updated ECMA-334. Additions included partial classes,
anonymous methods, nullable types, and generics (somewhat
similar to C++ templates).

In July 2005, ECMA submitted to ISO/IEC JTC 1, via the latter's
Fast-Track process, the standards and related TRs. This process
usually takes 6–9 months.

The C# language definition and the CLI are standardized under
ISO and Ecma standards that provide reasonable and
non-discriminatory licensing protection from patent claims.

Microsoft has agreed not to sue open source developers for
violating patents in non-profit projects for the part of the
framework that is covered by the OSP.[49] Microsoft has also
agreed not to enforce patents relating to Novell products
against Novell's paying customers[50] with the exception of a
list of products that do not explicitly mention C#, .NET or
Novell's implementation of .NET (The Mono Project).[51] However,
Novell maintains that Mono does not infringe any Microsoft
patents.[52] Microsoft has also made a specific agreement not
to enforce patent rights related to the Moonlight browser plugin,
which depends on Mono, provided it is obtained through Novell.